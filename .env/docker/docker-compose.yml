version: '3.8'

services:

  # ElasticSearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: elasticsearch
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"


  # Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOOKEEPER_CLIENT_PORT: 2181


  # Брокер сообщений
  # Kafka является буффером для отправки сообщений в Elastic
  kafka:
    depends_on:
      - zookeeper
    image: confluentinc/cp-enterprise-kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "tstr_jaeger_v1:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    restart: on-failure


  # At default settings the collector exposes the following ports:
  #  Port	Protocol	Function
  #  14250	gRPC	used by jaeger-agent to send spans in model.proto format
  #  14268	HTTP	can accept spans directly from clients in jaeger.thrift format over binary thrift protocol
  #  9411	HTTP	can accept Zipkin spans in Thrift, JSON and Proto (disabled by default)
  #  14269	HTTP	admin port: health check at / and metrics at /metrics

  #  Описание deployment с сайта jaegertracing.io:
  #  docker run \
  #  -e SPAN_STORAGE_TYPE=kafka \
  #  -e KAFKA_PRODUCER_BROKERS=<...> \
  #  -e KAFKA_TOPIC=<...> \
  #  jaegertracing/jaeger-collector:1.20

  # Буффер трассировок перед отправкой в Kafka
  # Note: умеет отправлять данные в Elasticsearch в обход Kafka
  jaeger-collector:
    depends_on:
      - kafka
    image: jaegertracing/jaeger-collector:1.20
    ports:
      # used by jaeger-agent to send spans
      - 14250:14250
      # HTTP collector port to receive directly spans from clients (отключено, должны обращаться к jaeger-agent)
      # - 14268:14268
      # HTTP health check port: $ curl -v http://localhost:14269/
      - 14269:14269
    environment:
      LOG_LEVEL: debug
      SPAN_STORAGE_TYPE: kafka
      KAFKA_PRODUCER_BROKERS: kafka:9092
      KAFKA_PRODUCER_TOPIC: tstr_jaeger_v1
    restart: on-failure


  #  Описание deployment с сайта jaegertracing.io:
  #  docker run \
  #  --rm \
  #  -p5775:5775/udp \
  #  -p6831:6831/udp \
  #  -p6832:6832/udp \
  #  -p5778:5778/tcp \
  #  jaegertracing/jaeger-agent:1.20 \
  #  reporter.grpc.host-port=jaeger-collector1:14250,jaeger-collector2:14250,jaeger-collector3:14250

  # Получает данные от client-приложения и отправляет их на jaeger-collector(-ы)
  jaeger-agent:
    depends_on:
      - jaeger-collector
    image: jaegertracing/jaeger-agent:1.20
    command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
    environment:
      LOG_LEVEL: debug
    restart: on-failure


  #  Описание deployment с сайта jaegertracing.io:
  #  docker run \
  #  -e SPAN_STORAGE_TYPE=elasticsearch \
  #  jaegertracing/jaeger-ingester:1.20

  # Чтение трассировок из Kafka и отправка в Elastic
  jaeger-ingester:
    depends_on:
      - kafka
      - elasticsearch
    image: jaegertracing/jaeger-ingester:1.20
    command: ["--es.server-urls=http://elasticsearch:9200",
              "--kafka.consumer.brokers=kafka:9092",
              "--kafka.consumer.topic=tstr_jaeger_v1"]
    ports:
      # HTTP health check port: $ curl -v http://localhost:14270/
      - 14270:14270
      # Metrics port: $ curl http://localhost:14271/metrics
      - 14271:14271
    environment:
      LOG_LEVEL: debug
      INGESTER_DEADLOCKINTERVAL: "0ms"
      SPAN_STORAGE_TYPE: "elasticsearch"
    restart: on-failure


  # Сервис получения данных из Elastic и UI
  jaeger-query:
    depends_on:
      - elasticsearch
    image: jaegertracing/jaeger-query:1.20
#    Отключено по-умолчанию: --query.max-clock-skew-adjust=0 - выравнивание span-ов на UI (duration)
    command: ["--query.max-clock-skew-adjustment=3ms"]
    ports:
      # Jaeger UI port
      - 16686:16686
      # HTTP health check port: $ curl -v http://localhost:16687/
      - 16687:16687
    environment:
#      LOG_LEVEL: info
      SPAN_STORAGE_TYPE: "elasticsearch"
      ES_SERVER_URLS: "http://elasticsearch:9200"
    restart: on-failure


  # Client service
  jaeger-tracing-client-service:
    depends_on:
      - jaeger-agent
      - jaeger-ingester
    container_name: jaeger-tracing-client-service
    build:
      context: ../../jaeger-tracing-demo-client
    ports:
      - 8080:8080
    environment:
      REMOTE_SERVER_URL: jaeger-tracing-remote-service
      REMOTE_SERVER_PORT: 8081
      REMOTE_SERVER_PATH: /remote


  # Remote service
  jaeger-tracing-remote-service:
    depends_on:
      - jaeger-agent
      - jaeger-ingester
    container_name: jaeger-tracing-remote-service
    build:
      context: ../../jaeger-tracing-demo-remote
    ports:
      - 8081:8081